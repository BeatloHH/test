# Importiere die benötigten Module
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

# Definiere die URL der Branche und der Stadt
branchen_url = "https://www.gelbeseiten.de/branchenbuch/rechtsanwaelte"
stadt_url = "https://www.gelbeseiten.de/branchenbuch/berlin"

# Definiere eine Funktion, die eine Anfrage an eine URL sendet und die Antwort zurückgibt
def get_response(url):
try:
response = requests.get(url)
response.raise_for_status()
return response
except requests.exceptions.RequestException as e:
print(f"Fehler: Die Anfrage ist fehlgeschlagen. {e}")

# Definiere die Anzahl der Seiten, die du durchsuchen möchtest
pages = 3

# Erstelle eine leere Liste, um die gefundenen Informationen zu speichern
results = []

# Iteriere über die Seiten
for page in range(1, pages + 1):
# Kombiniere die URLs mit dem Seitenparameter zu einer Gesamt-URL
gesamt_url = urljoin(branchen_url, stadt_url.split("/")[-1]) + f"?seite={page}"

# Sende eine Anfrage an die Gesamt-URL und speichere die Antwort
response = get_response(gesamt_url)

# Überprüfe, ob die Antwort gültig ist
if response:
# Erstelle ein BeautifulSoup-Objekt aus dem HTML-Quelltext der Antwort
soup = BeautifulSoup(response.text, "html.parser")

# Finde alle div-Elemente mit der Klasse "mod-Treffer"
treffer = soup.find_all("div", class_="mod-Treffer")

# Iteriere über die gefundenen Elemente
for t in treffer:
# Finde das span-Element mit der Klasse "mod-Treffer--besteBranche"
branche = t.find("span", class_="mod-Treffer--besteBranche")

# Finde das a-Element mit der Klasse "name"
name = t.find("a", class_="name")

# Finde das span-Element mit der Klasse "adresse"
adresse = t.find("span", class_="adresse")

# Überprüfe, ob alle Elemente gefunden wurden
if branche and name and adresse:
# Extrahiere den Text aus den Elementen
branche_text = branche.get_text().strip()
name_text = name.get_text().strip()
adresse_text = adresse.get_text().strip()

# Überprüfe, ob die Postleitzahl 10115 in der Adresse enthalten ist
if "10115" in adresse_text:
# Erstelle ein Dictionary mit den Informationen
info = {
"Branche": branche_text,
"Name": name_text,
"Adresse": adresse_text,
}

# Füge das Dictionary zur Liste hinzu, wenn es noch nicht vorhanden ist
if info not in results:
results.append(info)

# Gib die Liste aus
for result in results:
print(f"Branche: {result['Branche']}")
print(f"Name: {result['Name']}")
print(f"Adresse: {result['Adresse']}")
print("-" * 40)
